// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Claimed extends ethereum.Event {
  get params(): Claimed__Params {
    return new Claimed__Params(this);
  }
}

export class Claimed__Params {
  _event: Claimed;

  constructor(event: Claimed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get userShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get TXJPAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Received extends ethereum.Event {
  get params(): Received__Params {
    return new Received__Params(this);
  }
}

export class Received__Params {
  _event: Received;

  constructor(event: Received) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TXJPInitialOffering extends ethereum.SmartContract {
  static bind(address: Address): TXJPInitialOffering {
    return new TXJPInitialOffering("TXJPInitialOffering", address);
  }

  END(): BigInt {
    let result = super.call("END", "END():(uint256)", []);

    return result[0].toBigInt();
  }

  try_END(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("END", "END():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MINIMAL_PROVIDE_AMOUNT(): BigInt {
    let result = super.call(
      "MINIMAL_PROVIDE_AMOUNT",
      "MINIMAL_PROVIDE_AMOUNT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MINIMAL_PROVIDE_AMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MINIMAL_PROVIDE_AMOUNT",
      "MINIMAL_PROVIDE_AMOUNT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  START(): BigInt {
    let result = super.call("START", "START():(uint256)", []);

    return result[0].toBigInt();
  }

  try_START(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("START", "START():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  TOTAL_DISTRIBUTE_AMOUNT(): BigInt {
    let result = super.call(
      "TOTAL_DISTRIBUTE_AMOUNT",
      "TOTAL_DISTRIBUTE_AMOUNT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_TOTAL_DISTRIBUTE_AMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "TOTAL_DISTRIBUTE_AMOUNT",
      "TOTAL_DISTRIBUTE_AMOUNT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  TXJP(): Address {
    let result = super.call("TXJP", "TXJP():(address)", []);

    return result[0].toAddress();
  }

  try_TXJP(): ethereum.CallResult<Address> {
    let result = super.tryCall("TXJP", "TXJP():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  provided(param0: Address): BigInt {
    let result = super.call("provided", "provided(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_provided(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("provided", "provided(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalProvided(): BigInt {
    let result = super.call("totalProvided", "totalProvided():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalProvided(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalProvided",
      "totalProvided():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _TXJP(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class WithdrawProvidedETHCall extends ethereum.Call {
  get inputs(): WithdrawProvidedETHCall__Inputs {
    return new WithdrawProvidedETHCall__Inputs(this);
  }

  get outputs(): WithdrawProvidedETHCall__Outputs {
    return new WithdrawProvidedETHCall__Outputs(this);
  }
}

export class WithdrawProvidedETHCall__Inputs {
  _call: WithdrawProvidedETHCall;

  constructor(call: WithdrawProvidedETHCall) {
    this._call = call;
  }
}

export class WithdrawProvidedETHCall__Outputs {
  _call: WithdrawProvidedETHCall;

  constructor(call: WithdrawProvidedETHCall) {
    this._call = call;
  }
}

export class WithdrawTXJPCall extends ethereum.Call {
  get inputs(): WithdrawTXJPCall__Inputs {
    return new WithdrawTXJPCall__Inputs(this);
  }

  get outputs(): WithdrawTXJPCall__Outputs {
    return new WithdrawTXJPCall__Outputs(this);
  }
}

export class WithdrawTXJPCall__Inputs {
  _call: WithdrawTXJPCall;

  constructor(call: WithdrawTXJPCall) {
    this._call = call;
  }
}

export class WithdrawTXJPCall__Outputs {
  _call: WithdrawTXJPCall;

  constructor(call: WithdrawTXJPCall) {
    this._call = call;
  }
}

export class WithdrawUnclaimedTXJPCall extends ethereum.Call {
  get inputs(): WithdrawUnclaimedTXJPCall__Inputs {
    return new WithdrawUnclaimedTXJPCall__Inputs(this);
  }

  get outputs(): WithdrawUnclaimedTXJPCall__Outputs {
    return new WithdrawUnclaimedTXJPCall__Outputs(this);
  }
}

export class WithdrawUnclaimedTXJPCall__Inputs {
  _call: WithdrawUnclaimedTXJPCall;

  constructor(call: WithdrawUnclaimedTXJPCall) {
    this._call = call;
  }
}

export class WithdrawUnclaimedTXJPCall__Outputs {
  _call: WithdrawUnclaimedTXJPCall;

  constructor(call: WithdrawUnclaimedTXJPCall) {
    this._call = call;
  }
}
